name: Build and Publish Docker Image

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag for the Docker image (default: latest)'
        required: false
        default: 'latest'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BASE_REPO: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5
        with:
          go-version-file: 'go.mod'

      - name: Compute version number
        id: version-string
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            # For main branch, use semver with -dev suffix
            echo "tag=0.0.1-dev.$GITHUB_RUN_NUMBER+$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            # For tags, use the tag as is (assuming it's semver)
            TAG="${{ github.ref_name }}"
            echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          else
            # For other branches, use branch name and run number
            BRANCH="${{ github.ref_name }}"
            echo "tag=0.0.1-$BRANCH.$GITHUB_RUN_NUMBER+$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
          fi

      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup ko
        uses: ko-build/setup-ko@d006021bd0c28d1ce33a07e7943d48b079944c8d # v0.9

      - name: Install Cosign
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2

      - name: Build and Push Image to GHCR
        run: |
          TAG=$(echo "${{ steps.version-string.outputs.tag }}" | sed 's/+/_/g')
          TAGS="-t $TAG"

          # Add latest tag only if building from a tag
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAGS="$TAGS -t latest"
          fi

          KO_DOCKER_REPO=$BASE_REPO ko build --platform=linux/amd64,linux/arm64 --bare $TAGS ./ \
            --image-label=org.opencontainers.image.source=https://github.com/stacklok/frizbee-action,org.opencontainers.image.title="frizbee-action",org.opencontainers.image.vendor=Stacklok

      - name: Sign Image with Cosign
        run: |
          TAG=$(echo "${{ steps.version-string.outputs.tag }}" | sed 's/+/_/g')
          # Sign the ko image
          cosign sign -y $BASE_REPO:$TAG

          # Sign the latest tag if building from a tag
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            cosign sign -y $BASE_REPO:latest
          fi
